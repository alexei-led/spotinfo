name: docker

on:
  push:
    branches:
    - '*'
    tags:
    - '*'
    paths-ignore:
    - 'docs/**'
    - 'deploy/**'
    - '*.md'
  pull_request:
    branches:
    - '*'

jobs:

  build:
 
    runs-on: ubuntu-latest
    # skip commit with "[skip ci]" comment
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
 
    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Registry
      uses: docker/login-action@v1 
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
      
    - name: Available platforms
      run: echo "${{ steps.buildx.outputs.platforms }}"

    - name: Decide on image name
      id: nomenclator
      env:
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
      run: |
        name=${DOCKER_REPOSITORY}
        if [ -z "$name" ]; then
          name=${{ github.repository }}
        fi
        echo ::set-output name=name::${name}
        echo ::debug::docker image name ${name}

    - name: Decide on tag
      id: tagger
      run: |
        tag=$(echo "${{ github.ref }}" | sed -e 's/^refs\/heads\///g' -e 's/^refs\/tags\///g' -e 's/^refs\/pull\///g' -e 's/\/merge$//g' | sed -e 's/master/latest/g')
        echo "::set-output name=tag::${tag}"
        echo "::debug::docker image tag ${tag}"

    - name: Cache Docker layers
      uses: actions/cache@v2
      id: cache
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker image
      id: build-push
      uses: docker/build-push-action@v2
      with:
        build-args: VERSION=${{ steps.tagger.outputs.tag }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        tags: |
         ${{ steps.nomenclator.outputs.name }}:${{ steps.tagger.outputs.tag }}
          ${{ steps.nomenclator.outputs.name }}:latest
         ghcr.io/${{ github.repository }}:${{ steps.tagger.outputs.tag }}
         ghcr.io/${{ github.repository }}:latest
        push: true

    - name: image digest
      run: echo "${{ steps.build-push.outputs.digest }}"
